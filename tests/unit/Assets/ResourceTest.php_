<?php

/**
 * This file is part of the Phalcon Framework.
 *
 * (c) Phalcon Team <team@phalconphp.com>
 *
 * For the full copyright and license information, please view the LICENSE.txt
 * file that was distributed with this source code.
 */

namespace Phalcon\Test\Unit\Assets;

use Phalcon\Assets\Resource;
use Phalcon\Test\Module\UnitTest;
use UnitTester;

class ResourceTest
{
    /**
     * Tests getType
     *
     * @author Nikolaos Dimopoulos <nikos@phalconphp.com>
     * @since  2014-10-10
     */
    public function testAssetsResourceGetType(UnitTester $I)
    {
        $this->specify(
            "The resource getType is not correct",
            function () {
                $resource = new Resource('js', 'js/jquery.js');
                $expected = 'js';
                $actual   = $resource->getType();

                expect($actual)->equals($expected);
            }
        );
    }

    /**
     * Tests getResourceKey
     *
     * @test
     * @author Serghei Iakovlev <serghei@phalconphp.com>
     * @since  2017-06-02
     */
    public function getResourceKey(UnitTester $I)
    {
        $this->specify(
            "Unable to get resource key or resorce key is incorrect",
            function () {
                $resource = new Resource('js', 'js/jquery.js');

                expect(md5('js:js/jquery.js'))->equals($resource->getResourceKey());
            }
        );
    }

    /**
     * Tests getPath
     *
     * @author Nikolaos Dimopoulos <nikos@phalconphp.com>
     * @since  2014-10-10
     */
    public function testAssetsResourceGetPath(UnitTester $I)
    {
        $this->specify(
            "The resource getPath is not correct",
            function () {
                $resource = new Resource('js', 'js/jquery.js');
                $expected = 'js/jquery.js';
                $actual   = $resource->getPath();

                expect($actual)->equals($expected);
            }
        );
    }

    /**
     * Tests getLocal
     *
     * @author Nikolaos Dimopoulos <nikos@phalconphp.com>
     * @since  2014-10-10
     */
    public function testAssetsResourceGetLocal(UnitTester $I)
    {
        $this->specify(
            "The resource getLocal is not correct",
            function () {
                $resource = new Resource('js', 'js/jquery.js');
                $actual   = $resource->getLocal();

                expect($actual)->true();
            }
        );
    }
}
