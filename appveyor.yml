#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 3.3.2-{build}

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# environment variables
environment:
    matrix:
        - PHP_TARGET: 7.0
          PHP_VC: 14
          PHP_BUILD_TYPE: Win32
          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
#        - PHP_TARGET: 7.0
#          PHP_VC: 14
#          PHP_BUILD_TYPE: nts-Win32
#          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
#        - PHP_TARGET: 7.1
#          PHP_VC: 14
#          PHP_BUILD_TYPE: Win32
#          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
#        - PHP_TARGET: 7.1
#          PHP_VC: 14
#          PHP_BUILD_TYPE: Win32
#          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
    PHP_DIR: c:\projects\php
    PHP_SDK: c:\projects\php-sdk
    PHP_DEVPACK: c:\projects\php-devpack
    PHP_IMAGICK: c:\projects\php-imagick
    PHP_IMAGICK_VERSION: 3.4.3rc4
    IMAGE_MAGICK: c:\projects\ImageMagick
    TEST_PHP_EXECUTABLE: C:\projects\php\bin\php.exe
    PHP_SDK_BINARY_TOOLS_VER: php-sdk-2.0.7
    NO_INTERACTION: 1
    REPORT_EXIT_STATUS: 1

# clone entire repository history if not defined
clone_depth: 1

# clone directory
clone_folder: c:\projects\phalcon

# scripts that are called at very beginning, before repo cloning
init:
    - SET ANSICON=121x90 (121x90)
    - SET COMPOSER_NO_INTERACTION=1
    - SET PARSER_VERSION=1.1.1
    - SET PARSER_RELEASE=268
    - SET PHALCON_STABLE_VERSION=3.3.1

# build cache to preserve files/folders between builds
cache:
    - vendor -> composer.json
    - composer.phar -> composer.json

matrix:
    # immediately finish build once one of the jobs fails
    fast_finish: true

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, AnyCPU
platform:
    - x86
    - x64

# scripts that run after cloning repository
install:
    - cmd: cinst wget
    # ==================================================
    - echo Setting PHP version...
    # ==================================================
    - appveyor DownloadFile http://windows.php.net/downloads/releases/sha1sum.txt
    - ps: |
        $versions = type sha1sum.txt | where { $_ -match "php-(${env:PHP_TARGET}\.\d+)-src" } | foreach { $matches[1] }
        $version = $versions.Split(' ')[-1]
        $env:PHP_VERSION=${version}
    - ps: $env:PARSER_DOWNLOAD_URL="https://github.com/phalcon/php-zephir-parser/releases/download/v${env:PARSER_VERSION}/zephir_parser_${env:PLATFORM}_vc${env:PHP_VC}_php${env:PHP_TARGET}_${env:PARSER_VERSION}-${env:PARSER_RELEASE}.zip"
    # Phalcon extension is required to be already loaded in PHP to generate builds, optimized for 32-bit and 64-bit platforms
    - ps: $env:PHALCON_DOWNLOAD_URL="https://github.com/phalcon/cphalcon/releases/download/v${env:PHALCON_STABLE_VERSION}/phalcon_${env:PLATFORM}_vc${env:PHP_VC}_php${env:PHP_TARGET}.0_${env:PHALCON_STABLE_VERSION}.zip"

build_script:
    # ==================================================
    - echo Initializing Build...
    # ==================================================
    - cd %APPVEYOR_BUILD_FOLDER%
    - git submodule update --init --recursive

    - ps: $env:VS140COMNTOOLS="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\"
    - ps: >-
        If ($env:PHP_VC -Match "14") {
          $env:VSCOMNTOOLS="${env:VS120COMNTOOLS}"
          $env:IMAGE_MAGICK_VERSION="6.9.3-7-vc${env:PHP_VC}-${env:PLATFORM}"
        } Else {
          $env:VSCOMNTOOLS="${env:VS140COMNTOOLS}"
          $env:IMAGE_MAGICK_VERSION="7.0.7-11-vc${env:PHP_VC}-${env:PLATFORM}"
        }

        If ($env:PHP_BUILD_TYPE -Match "nts-Win32") {
          $env:PHP_IMAGICK_URI="http://windows.php.net/downloads/pecl/releases/imagick/${env:PHP_IMAGICK_VERSION}/php_imagick-${env:PHP_IMAGICK_VERSION}-${env:PHP_TARGET}-nts-vc${env:PHP_VC}-${env:PLATFORM}.zip"
        } Else {
          $env:PHP_IMAGICK_URI="http://windows.php.net/downloads/pecl/releases/imagick/${env:PHP_IMAGICK_VERSION}/php_imagick-${env:PHP_IMAGICK_VERSION}-${env:PHP_TARGET}-ts-vc${env:PHP_VC}-${env:PLATFORM}.zip"
        }

    - set PATH=%PATH%;%PHP_SDK%\bin;%PHP_DIR%\bin;%PHP_DIR%;%IMAGE_MAGICK%\bin;%PHP_IMAGICK%

    # TODO: Move to build matrix
    - if "%platform%" == "x86" call "%VSCOMNTOOLS%\..\..\VC\vcvarsall.bat"
    - if "%platform%" == "x86" if "%PHP_BUILD_TYPE%" == "nts-Win32" set RELEASE_FOLDER=%APPVEYOR_BUILD_FOLDER%\Release
    - if "%platform%" == "x86" if "%PHP_BUILD_TYPE%" == "Win32" set RELEASE_FOLDER=%APPVEYOR_BUILD_FOLDER%\Release_TS

    - if "%platform%" == "x64" "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
    - if "%platform%" == "x64" call "%VSCOMNTOOLS%\..\..\VC\vcvarsall.bat" x86_amd64
    - if "%platform%" == "x64" if "%PHP_BUILD_TYPE%" == "nts-Win32" set RELEASE_FOLDER=%APPVEYOR_BUILD_FOLDER%\%platform%\Release
    - if "%platform%" == "x64" if "%PHP_BUILD_TYPE%" == "Win32" set RELEASE_FOLDER=%APPVEYOR_BUILD_FOLDER%\%platform%\Release_TS

    # TODO: Check zipball format
    - set RELEASE_ZIPBALL=phalcon_%platform%_vc%PHP_VC%_php%PHP_VER%_%APPVEYOR_BUILD_VERSION%
    - set PHP_SDK_ZIPBALL_NAME=php-sdk-binary-tools-%PHP_SDK_BINARY_TOOLS_VER%

    - ps: (new-object net.webclient).DownloadFile('https://github.com/OSTC/php-sdk-binary-tools/archive/' + ${env:PHP_SDK_BINARY_TOOLS_VER} + '.zip', ${env:APPVEYOR_BUILD_FOLDER} +  '\' + ${env:PHP_SDK_ZIPBALL_NAME} + '.zip')
    - 7z x -y %PHP_SDK_ZIPBALL_NAME%.zip -oC:\projects
    - move C:\projects\%PHP_SDK_ZIPBALL_NAME% %PHP_SDK%
    # ==================================================
    - echo Downloading PHP source code [http://windows.php.net/downloads/releases/php-%PHP_VERSION%-%PHP_BUILD_TYPE%-vc%PHP_VC%-%platform%.zip]
    # ==================================================
    - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/releases/php-' + ${env:PHP_VERSION} + '-' + ${env:PHP_BUILD_TYPE} + '-vc' + ${env:PHP_VC} + '-' + ${env:PLATFORM} + '.zip', ${env:APPVEYOR_BUILD_FOLDER} + '\php.zip')
    - 'mkdir %PHP_DIR% && mv php.zip %PHP_DIR%\php.zip && cd %PHP_DIR%'
    - 7z.exe x php.zip | FIND /V "ing  "
    # ==================================================
    - echo Install PHP Dev pack
    # ==================================================
    - ps: $env:DEVEL_PACK_VERSION="${env:PHP_VERSION}-${env:PHP_BUILD_TYPE}-vc${env:PHP_VC}-${env:PLATFORM}"
    # ==================================================
    - echo Downloading PHP Dev pack source code [http://windows.php.net/downloads/releases/php-devel-pack-%DEVEL_PACK_VERSION%.zip]
    # ==================================================
    - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/releases/php-devel-pack-' + ${env:DEVEL_PACK_VERSION} + '.zip', ${env:APPVEYOR_BUILD_FOLDER} + '\php-dev.zip')
    - cd %APPVEYOR_BUILD_FOLDER%
    - 7z.exe x php-dev.zip | FIND /V "ing  "
    - move %APPVEYOR_BUILD_FOLDER%\php-%PHP_VERSION%-devel-VC%PHP_VC%-%PLATFORM% %PHP_DEVPACK%
    # ==================================================
    - echo Install ImageMagick
    # ==================================================
    - 'mkdir %IMAGE_MAGICK% && cd %IMAGE_MAGICK%'
    - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/pecl/deps/ImageMagick-' + ${env:IMAGE_MAGICK_VERSION} + '.zip', ${env:IMAGE_MAGICK} + '\ImageMagick.zip')
    - 7z.exe x ImageMagick.zip | FIND /V "ing  "
    # ==================================================
    - echo Enable php_imagick
    # ==================================================
    - 'mkdir %PHP_IMAGICK% && cd %PHP_IMAGICK%'
    - wget %PHP_IMAGICK_URI% --no-check-certificate -q -O php_imagick.zip
    - 7z.exe x php_imagick.zip | FIND /V "ing  "
    # ==================================================
    - echo Enable Zephir Parser and Phalcon
    # Phalcon extension is required to be already loaded in PHP to generate builds, optimized for 32-bit and 64-bit platforms
    # ==================================================
    - 'cd %PHP_DIR%\ext'
    - curl --location --silent --show-error %PARSER_DOWNLOAD_URL% --output zephir_parser.zip
    - 7z.exe x zephir_parser.zip | FIND /V "ing  "
    - curl --location --silent --show-error %PHALCON_DOWNLOAD_URL% --output phalcon_stable.zip
    - 7z.exe x phalcon_stable.zip | FIND /V "ing  "
    # ==================================================
    - echo Building PHP [%PHP_VERSION%]
    # ==================================================
    - '%PHP_SDK%\bin\phpsdk_setvars'
    - 'cd %PHP_DIR%'
    #- '"%VS110COMNTOOLS%\VsDevCmd" %PLATFORM%'
    - 'echo extension_dir=%PHP_DIR%\ext > php.ini'
    - 'echo extension=php_zephir_parser.dll >> php.ini'
    - 'echo extension=php_phalcon.dll >> php.ini'
    - 'echo extension=php_curl.dll >> php.ini'
    - 'echo extension=php_openssl.dll >> php.ini'
    - 'echo extension=php_mbstring.dll >> php.ini'
    - 'echo extension=php_pdo_sqlite.dll >> php.ini'
    - 'echo extension=php_fileinfo.dll >> php.ini'
    - 'echo extension=php_gettext.dll >> php.ini'
    - 'echo extension=php_gd2.dll >> php.ini'
    #- 'echo extension=%PHP_IMAGICK%\php_imagick.dll >> php.ini'
    - 'echo memory_limit=256M >> php.ini'
    - php --ri "Zephir Parser"
    # ==================================================
    - echo Download tests dependencies...
    # ==================================================
    - cd %APPVEYOR_BUILD_FOLDER%
    - if not exist vendor (php -r "readfile('https://getcomposer.org/installer');" | php && php composer.phar --version)
    - if not exist vendor (php composer.phar update --quiet --no-ansi --no-interaction --no-progress --optimize-autoloader --dev --prefer-dist --no-suggest --ignore-platform-reqs)
    # ==================================================
    - echo Download Zephir
    # ==================================================
    - cd %APPVEYOR_BUILD_FOLDER%
    - 'vendor\bin\zephir help'
    # ==================================================
    - echo Build Phalcon
    # ==================================================
    - 'vendor\bin\zephir generate --backend=ZendEngine3 -Wnonexistent-function -Wnonexistent-class -Wunused-variable'
    - 'cd %APPVEYOR_BUILD_FOLDER%\build'
    - 'php gen-build.php'
    - 'cd %APPVEYOR_BUILD_FOLDER%\build\php7\safe'
    - '%PHP_DEVPACK%\phpize.bat'
    - configure --enable-phalcon
    - nmake

on_finish:
    - cd %APPVEYOR_BUILD_FOLDER%
    # TODO: Fix path
    - ps: >-
        IF (Test-Path -Path build\php7\safe\Release_TS\php_phalcon.dll) {
            Push-AppveyorArtifact build\php7\safe\Release_TS\php_phalcon.dll
        }

on_failure :
    - 'dir %APPVEYOR_BUILD_FOLDER%'
    - 'dir %PHP_DIR%'
    - 'dir %PHP_DEVPACK%'
    - ps: >-
        IF (Test-Path -Path compile-errors.log) {
            type compile-errors.log
        }

        IF (Test-Path -Path compile.log) {
            type compile.log
        }

        IF (Test-Path -Path configure.js) {
            type configure.js
        }

        IF (Test-Path -Path C:\ProgramData\chocolatey\logs\chocolatey.log) {
            type C:\ProgramData\chocolatey\logs\chocolatey.log
        }
